/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package khanhpl.ui;

import java.sql.Date;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import khanhpl.daos.BrandDAO;
import khanhpl.daos.MotocycleDAO;
import khanhpl.dtos.BrandDTO;
import khanhpl.dtos.MotocycleDTO;
import khanhpl.validation.BrandValidation;
import khanhpl.validation.MotocycleValidation;

/**
 *
 * @author Admin
 */
public class MainView extends javax.swing.JFrame {

    Vector vctBrandHeader = null;
    Vector vctBrandData = null;
    Vector<BrandDTO> brandData = null;
    boolean chkCurBrand = false;

    Vector vctMotoHeader = null;
    Vector vctMotoData = null;
    Vector<MotocycleDTO> motoData = null;
    boolean chkCurMoto = false;

    Vector vctCbxData = null;
    HashMap cbxData = null;

    /**
     * Creates new form MainView
     */
    public MainView() {
        initComponents();
        loadTblBrand();
        loadTblMotocycle();
        loadCbxYear();
        cbxBrandName.setSelectedIndex(-1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tpMain = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        pBrandMainPart = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBrand = new javax.swing.JTable();
        pBrandDetailPart = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtBrandID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtBrandName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtCountry = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txaDescription = new javax.swing.JTextArea();
        btnBrandAddNew = new javax.swing.JButton();
        btnBrandSave = new javax.swing.JButton();
        btnBrandDelete = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        pMotocycleMainPart = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblMotocycle = new javax.swing.JTable();
        pMotocycleDetailPart = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        btnMotoAddNew = new javax.swing.JButton();
        btnMotoSave = new javax.swing.JButton();
        btnMotoDelete = new javax.swing.JButton();
        txtMotocycleID = new javax.swing.JTextField();
        txtModel = new javax.swing.JTextField();
        txtYear = new javax.swing.JTextField();
        txtCondition = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        txtQuantity = new javax.swing.JTextField();
        txtWarranty = new javax.swing.JTextField();
        cbxBrandName = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tpMain.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tpMainMouseClicked(evt);
            }
        });

        pBrandMainPart.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Main part:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(51, 153, 255))); // NOI18N

        tblBrand.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblBrand.getTableHeader().setReorderingAllowed(false);
        tblBrand.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBrandMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblBrand);

        javax.swing.GroupLayout pBrandMainPartLayout = new javax.swing.GroupLayout(pBrandMainPart);
        pBrandMainPart.setLayout(pBrandMainPartLayout);
        pBrandMainPartLayout.setHorizontalGroup(
            pBrandMainPartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pBrandMainPartLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 568, Short.MAX_VALUE)
                .addContainerGap())
        );
        pBrandMainPartLayout.setVerticalGroup(
            pBrandMainPartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pBrandMainPartLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 32, Short.MAX_VALUE))
        );

        pBrandDetailPart.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Detail part:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(0, 153, 255))); // NOI18N

        jLabel1.setText("BrandID: ");

        jLabel2.setText("BrandName: ");

        jLabel3.setText("Country: ");

        jLabel4.setText("Description: ");

        txaDescription.setColumns(20);
        txaDescription.setRows(5);
        jScrollPane2.setViewportView(txaDescription);

        btnBrandAddNew.setText("Add New");
        btnBrandAddNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrandAddNewActionPerformed(evt);
            }
        });

        btnBrandSave.setText("Save");
        btnBrandSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrandSaveActionPerformed(evt);
            }
        });

        btnBrandDelete.setText("Delete");
        btnBrandDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrandDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pBrandDetailPartLayout = new javax.swing.GroupLayout(pBrandDetailPart);
        pBrandDetailPart.setLayout(pBrandDetailPartLayout);
        pBrandDetailPartLayout.setHorizontalGroup(
            pBrandDetailPartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pBrandDetailPartLayout.createSequentialGroup()
                .addGroup(pBrandDetailPartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pBrandDetailPartLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(pBrandDetailPartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pBrandDetailPartLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2))
                            .addGroup(pBrandDetailPartLayout.createSequentialGroup()
                                .addGroup(pBrandDetailPartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel1))
                                .addGap(2, 2, 2)
                                .addGroup(pBrandDetailPartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtBrandID)
                                    .addComponent(txtBrandName)
                                    .addComponent(txtCountry)))))
                    .addGroup(pBrandDetailPartLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBrandAddNew)
                        .addGap(39, 39, 39)
                        .addComponent(btnBrandSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                        .addComponent(btnBrandDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pBrandDetailPartLayout.setVerticalGroup(
            pBrandDetailPartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pBrandDetailPartLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(pBrandDetailPartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtBrandID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(pBrandDetailPartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtBrandName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pBrandDetailPartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pBrandDetailPartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(pBrandDetailPartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBrandAddNew)
                    .addComponent(btnBrandSave)
                    .addComponent(btnBrandDelete))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(pBrandMainPart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pBrandDetailPart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pBrandMainPart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pBrandDetailPart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        tpMain.addTab("Brand", jPanel1);

        pMotocycleMainPart.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Main Part:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(51, 102, 255))); // NOI18N

        tblMotocycle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblMotocycle.getTableHeader().setReorderingAllowed(false);
        tblMotocycle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMotocycleMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblMotocycle);

        javax.swing.GroupLayout pMotocycleMainPartLayout = new javax.swing.GroupLayout(pMotocycleMainPart);
        pMotocycleMainPart.setLayout(pMotocycleMainPartLayout);
        pMotocycleMainPartLayout.setHorizontalGroup(
            pMotocycleMainPartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pMotocycleMainPartLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 561, Short.MAX_VALUE)
                .addContainerGap())
        );
        pMotocycleMainPartLayout.setVerticalGroup(
            pMotocycleMainPartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pMotocycleMainPartLayout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pMotocycleDetailPart.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Detail part: ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(51, 102, 255))); // NOI18N

        jLabel5.setText("Motocycle ID:");

        jLabel6.setText("Model:");

        jLabel7.setText("Year:");

        jLabel8.setText("Condition:");

        jLabel9.setText("Price:");

        jLabel10.setText("Quantity:");

        jLabel11.setText("Warranty:");

        jLabel12.setText("Brand Name:");

        btnMotoAddNew.setText("AddNew");
        btnMotoAddNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMotoAddNewActionPerformed(evt);
            }
        });

        btnMotoSave.setText("Save");
        btnMotoSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMotoSaveActionPerformed(evt);
            }
        });

        btnMotoDelete.setText("Delete");
        btnMotoDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMotoDeleteActionPerformed(evt);
            }
        });

        cbxBrandName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout pMotocycleDetailPartLayout = new javax.swing.GroupLayout(pMotocycleDetailPart);
        pMotocycleDetailPart.setLayout(pMotocycleDetailPartLayout);
        pMotocycleDetailPartLayout.setHorizontalGroup(
            pMotocycleDetailPartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pMotocycleDetailPartLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pMotocycleDetailPartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pMotocycleDetailPartLayout.createSequentialGroup()
                        .addGroup(pMotocycleDetailPartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pMotocycleDetailPartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMotocycleID)
                            .addComponent(txtModel)
                            .addComponent(txtYear)
                            .addComponent(txtCondition)
                            .addComponent(txtPrice)
                            .addComponent(txtQuantity)
                            .addComponent(txtWarranty)
                            .addComponent(cbxBrandName, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(pMotocycleDetailPartLayout.createSequentialGroup()
                        .addComponent(btnMotoAddNew)
                        .addGap(56, 56, 56)
                        .addComponent(btnMotoSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                        .addComponent(btnMotoDelete))))
        );
        pMotocycleDetailPartLayout.setVerticalGroup(
            pMotocycleDetailPartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pMotocycleDetailPartLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pMotocycleDetailPartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtMotocycleID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pMotocycleDetailPartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pMotocycleDetailPartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pMotocycleDetailPartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtCondition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pMotocycleDetailPartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pMotocycleDetailPartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pMotocycleDetailPartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtWarranty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pMotocycleDetailPartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(cbxBrandName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(pMotocycleDetailPartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnMotoAddNew)
                    .addComponent(btnMotoSave)
                    .addComponent(btnMotoDelete))
                .addContainerGap(63, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(pMotocycleMainPart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pMotocycleDetailPart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pMotocycleMainPart, javax.swing.GroupLayout.PREFERRED_SIZE, 462, Short.MAX_VALUE)
            .addComponent(pMotocycleDetailPart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        tpMain.addTab("Motocycle", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tpMain)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tpMain)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblBrandMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBrandMouseClicked
        // TODO add your handling code here:
        chkCurBrand = true;
        txtBrandID.setEditable(false);
        int pos = tblBrand.getSelectedRow();
        BrandDTO brandDTO = brandData.get(pos);
        txtBrandID.setText(brandDTO.getBrandID());
        txtBrandName.setText(brandDTO.getBrandName());
        txtCountry.setText(brandDTO.getCountry());
        txaDescription.setText(brandDTO.getDescription());
    }//GEN-LAST:event_tblBrandMouseClicked

    private void btnBrandAddNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrandAddNewActionPerformed
        // TODO add your handling code here:
        chkCurBrand = false;
        txtBrandID.setEditable(true);
        txtBrandID.setText("");
        txtBrandName.setText("");
        txtCountry.setText("");
        txaDescription.setText("");
        tblBrand.setRowSelectionInterval(0, 0);
    }//GEN-LAST:event_btnBrandAddNewActionPerformed

    private void btnBrandSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrandSaveActionPerformed
        // TODO add your handling code here:
        String brandID = txtBrandID.getText().trim();
        String brandName = txtBrandName.getText().trim();
        String country = txtCountry.getText().trim();
        String description = txaDescription.getText().trim();
        BrandDAO brandDAO = new BrandDAO();
        BrandValidation brandValid = new BrandValidation();
        try {
            if (!brandValid.chkBrandName(brandName)) {
                JOptionPane.showMessageDialog(null, "Brand Name must not be left blank and max length <= 50 chars");
                return;
            }
            if (!brandValid.chkCountry(country)) {
                JOptionPane.showMessageDialog(null, "Country must not be left blank and max length <=50 chars");
                return;
            }

            if (!brandValid.chkDescription(description)) {
                JOptionPane.showMessageDialog(null, "Description max length must <=200 chars");
                return;
            }
            if (!chkCurBrand) {
                //check save or update; true = update
                if (!brandValid.checkBrandID(brandID)) {
                    JOptionPane.showMessageDialog(null, "Brand ID has been exsited , left blank or max length >10 chars ");
                    return;
                }
                boolean chkSave = brandDAO.saveBrand(brandID, brandName, country, description);
                if (chkSave) {
                    JOptionPane.showMessageDialog(null, "Save brand successfull");
                    loadTblBrand();
                    int newBrandPos = brandData.size() - 1;
                    tblBrand.setRowSelectionInterval(newBrandPos, newBrandPos);
                    chkCurBrand = true;
                } else {
                    JOptionPane.showMessageDialog(null, "Save brand fail!!!");
                }

            } else {
                boolean chkUpdate = brandDAO.updateBrand(brandID, brandName, country, description);
                if (chkUpdate) {
                    JOptionPane.showMessageDialog(null, "Update brand successfull");
                    int curPos = tblBrand.getSelectedRow();
                    loadTblBrand();
                    tblBrand.setRowSelectionInterval(curPos, curPos);
                    chkCurBrand = true;
                } else {
                    JOptionPane.showMessageDialog(null, "Update brand fail!!!");
                }

            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MainView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(MainView.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_btnBrandSaveActionPerformed

    private void btnBrandDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrandDeleteActionPerformed
        // TODO add your handling code here:
        try {
            int pos = -1;
            pos = tblBrand.getSelectedRow();
            if (pos != -1) {

                String brandID = brandData.get(pos).getBrandID();
                BrandDAO brandDAO = new BrandDAO();
                boolean chkDelete = brandDAO.deleteBrand(brandID);
                if (chkDelete) {
                    brandData.remove(pos);
                    chkCurBrand = false;
                    txtBrandID.setEditable(true);
                    txtBrandID.setText("");
                    txtBrandName.setText("");
                    txtCountry.setText("");
                    txaDescription.setText("");
                    JOptionPane.showMessageDialog(null, "Delete Successful");
                } else {
                    JOptionPane.showMessageDialog(null, "Delete fail");
                    return;
                }
            } else {
                JOptionPane.showMessageDialog(null, "Please choose a Brand!!!");
                return;
            }
        } catch (SQLException ex) {
            if (ex.getMessage().contains("The DELETE statement conflicted with the REFERENCE")) {
                JOptionPane.showMessageDialog(null, "Brand cannot be deleted");

            } else {
                Logger.getLogger(MainView.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MainView.class.getName()).log(Level.SEVERE, null, ex);
        }
        loadTblBrand();

    }//GEN-LAST:event_btnBrandDeleteActionPerformed

    private void tpMainMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tpMainMouseClicked
        // TODO add your handling code here:
        loadTblBrand();
        loadTblMotocycle();
        loadCbxYear();
    }//GEN-LAST:event_tpMainMouseClicked

    private void btnMotoSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMotoSaveActionPerformed
        // TODO add your handling code here:
        try {
            String motocycleID = txtMotocycleID.getText().trim();
            String model = txtModel.getText().trim();
            String yearStr = txtYear.getText().trim();
            Date year;
            String condition = txtCondition.getText().trim();
            String priceStr = txtPrice.getText().trim();
            float price;
            String quantityStr = txtQuantity.getText().trim();
            int quantity;
            String warranty = txtWarranty.getText().trim();
            int brandPos = -1;
            brandPos = cbxBrandName.getSelectedIndex();
            String brandID;
            MotocycleDAO motoDAO = new MotocycleDAO();
            MotocycleValidation motoValid = new MotocycleValidation();
            if (!motoValid.checkModel(model)) {
                JOptionPane.showMessageDialog(null, "Model max length must >0 and <= 50 chars");
                return;
            }

            if (!motoValid.checkYear(yearStr)) {
                JOptionPane.showMessageDialog(null, "Year must follow format yyyy-mm-dd");
                return;
            } else {
                year = Date.valueOf(yearStr);
            }

            if (!motoValid.checkCondition(condition)) {
                JOptionPane.showMessageDialog(null, "Condition max length must >0 and <= 50 chars");
                return;
            }

            if (!motoValid.checkPrice(priceStr)) {
                JOptionPane.showMessageDialog(null, "Price must be Float type and not left blank");
                return;
            } else {
                price = Float.parseFloat(priceStr);
            }

            if (!motoValid.checkQuantity(quantityStr)) {
                JOptionPane.showMessageDialog(null, "Quantity must be Integer type and not left blank");
                return;
            } else {
                quantity = Integer.parseInt(quantityStr);
            }

            if (!motoValid.checkWarranty(warranty)) {
                JOptionPane.showMessageDialog(null, "Warranty max length must >0 and <= 50 chars");
                return;
            }

            if (!motoValid.checkBrandName(brandPos)) {
                JOptionPane.showMessageDialog(null, "Please choose a Brand!!");
                return;
            } else {
                brandID = brandData.get(brandPos).getBrandID();
            }

            if (!chkCurMoto) {
                if (!motoValid.checkMotoID(motocycleID)) {
                    JOptionPane.showMessageDialog(null, "Motocycle ID has been exsited , left blank or max length >10 chars");
                    return;
                }
                boolean chkMotoSave = motoDAO.motoSave(motocycleID, model, year, condition, price, quantity, warranty, brandID);
                if (chkMotoSave) {
                    JOptionPane.showMessageDialog(null, "Save successful");
                    loadTblMotocycle();
                    int newMotoPos = vctMotoData.size() - 1;
                    tblMotocycle.setRowSelectionInterval(newMotoPos, newMotoPos);
                    chkCurMoto = true;
                } else {
                    JOptionPane.showMessageDialog(null, "Save fail");

                }

            } else {
                boolean chkMotoUpdate = motoDAO.motoUpdate(motocycleID, model, year, condition, price, quantity, warranty, brandID);
                if (chkMotoUpdate) {
                    JOptionPane.showMessageDialog(null, "Update successful");
                    int curPos = tblMotocycle.getSelectedRow();
                    loadTblMotocycle();
                    tblMotocycle.setRowSelectionInterval(curPos, curPos);
                    chkCurMoto = true;
                } else {
                    JOptionPane.showMessageDialog(null, "update fail");
                }
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MainView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(MainView.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnMotoSaveActionPerformed

    private void btnMotoAddNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMotoAddNewActionPerformed
        // TODO add your handling code here:
        chkCurMoto = false;
        txtMotocycleID.setEditable(true);
        txtMotocycleID.setText("");
        txtModel.setText("");
        txtYear.setText("");
        txtCondition.setText("");
        txtPrice.setText("");
        txtQuantity.setText("");
        txtWarranty.setText("");
        cbxBrandName.setSelectedIndex(-1);
    }//GEN-LAST:event_btnMotoAddNewActionPerformed

    private void tblMotocycleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMotocycleMouseClicked
        // TODO add your handling code here:
        chkCurMoto = true;
        txtMotocycleID.setEditable(false);
        int pos = tblMotocycle.getSelectedRow();
        MotocycleDTO motoDTO = motoData.get(pos);
        txtMotocycleID.setText(motoDTO.getMotocycleID());
        txtModel.setText(motoDTO.getModel());
        txtYear.setText(motoDTO.getYear().toString());
        txtCondition.setText(motoDTO.getCondition());
        txtPrice.setText(Float.toString(motoDTO.getPrice()));
        txtQuantity.setText(Integer.toString(motoDTO.getQuantity()));
        txtWarranty.setText(motoDTO.getWarranty());
        String brandID = motoDTO.getBrandID();
        int cbxPos = (int) cbxData.get(brandID);
        cbxBrandName.setSelectedIndex(cbxPos);
    }//GEN-LAST:event_tblMotocycleMouseClicked

    private void btnMotoDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMotoDeleteActionPerformed
        // TODO add your handling code here:
        try {
            int pos = -1;
            pos = tblMotocycle.getSelectedRow();
            if (pos > 0) {

                MotocycleDAO motoDAO = new MotocycleDAO();
                String motoID = motoData.get(pos).getMotocycleID();
                boolean chkDeleteMoto = motoDAO.deleteMoto(motoID);
                if (chkDeleteMoto) {
                    JOptionPane.showMessageDialog(null, "Delete Successful");
                    txtMotocycleID.setEditable(true);
                    chkCurMoto = false;
                    txtMotocycleID.setText("");
                    txtModel.setText("");
                    txtYear.setText("");
                    txtCondition.setText("");
                    txtPrice.setText("");
                    txtQuantity.setText("");
                    txtWarranty.setText("");
                    cbxBrandName.setSelectedIndex(-1);

                } else {
                    JOptionPane.showMessageDialog(null, "Delete fail");
                    return;
                }
            } else {
                JOptionPane.showMessageDialog(null, "Please choose a Motocycle");
                return;
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MainView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(MainView.class.getName()).log(Level.SEVERE, null, ex);
        }
        loadTblMotocycle();
    }//GEN-LAST:event_btnMotoDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBrandAddNew;
    private javax.swing.JButton btnBrandDelete;
    private javax.swing.JButton btnBrandSave;
    private javax.swing.JButton btnMotoAddNew;
    private javax.swing.JButton btnMotoDelete;
    private javax.swing.JButton btnMotoSave;
    private javax.swing.JComboBox<String> cbxBrandName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel pBrandDetailPart;
    private javax.swing.JPanel pBrandMainPart;
    private javax.swing.JPanel pMotocycleDetailPart;
    private javax.swing.JPanel pMotocycleMainPart;
    private javax.swing.JTable tblBrand;
    private javax.swing.JTable tblMotocycle;
    private javax.swing.JTabbedPane tpMain;
    private javax.swing.JTextArea txaDescription;
    private javax.swing.JTextField txtBrandID;
    private javax.swing.JTextField txtBrandName;
    private javax.swing.JTextField txtCondition;
    private javax.swing.JTextField txtCountry;
    private javax.swing.JTextField txtModel;
    private javax.swing.JTextField txtMotocycleID;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtQuantity;
    private javax.swing.JTextField txtWarranty;
    private javax.swing.JTextField txtYear;
    // End of variables declaration//GEN-END:variables

    private void loadTblBrand() {
        try {
            vctBrandHeader = new Vector();
            vctBrandHeader.add("Brand ID");
            vctBrandHeader.add("Brand Name");
            vctBrandHeader.add("country");
            vctBrandHeader.add("Description");
            brandData = new Vector();
            BrandDAO brandDAO = new BrandDAO();
            brandData = brandDAO.getBrandItems();
            vctBrandData = new Vector();
            for (BrandDTO brandDTO : brandData) {
                Vector temp = new Vector();
                temp.add(brandDTO.getBrandID());
                temp.add(brandDTO.getBrandName());
                temp.add(brandDTO.getCountry());
                temp.add(brandDTO.getDescription());
                vctBrandData.add(temp);
            }
            DefaultTableModel model = new DefaultTableModel(vctBrandData, vctBrandHeader) {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };
            tblBrand.setModel(model);
            tblBrand.updateUI();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MainView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(MainView.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void loadTblMotocycle() {
        try {
            vctMotoHeader = new Vector();
            vctMotoHeader.add("Motocycle ID");
            vctMotoHeader.add("Model");
            vctMotoHeader.add("Year");
            vctMotoHeader.add("Condition");
            vctMotoHeader.add("Price");
            vctMotoHeader.add("Quantity");
            vctMotoHeader.add("Warranty");
            vctMotoHeader.add("Brand ID");
            MotocycleDAO motoDAO = new MotocycleDAO();
            motoData = new Vector();
            motoData = motoDAO.getMotocycleItems();
            vctMotoData = new Vector();
            for (MotocycleDTO motoDTO : motoData) {
                Vector temp = new Vector();
                temp.add(motoDTO.getMotocycleID());
                temp.add(motoDTO.getModel());
                temp.add(motoDTO.getYear());
                temp.add(motoDTO.getCondition());
                temp.add(motoDTO.getPrice());
                temp.add(motoDTO.getQuantity());
                temp.add(motoDTO.getWarranty());
                temp.add(motoDTO.getBrandID());
                vctMotoData.add(temp);
            }
            DefaultTableModel model = new DefaultTableModel(vctMotoData, vctMotoHeader) {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }

            };
            tblMotocycle.setModel(model);
            tblMotocycle.updateUI();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MainView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(MainView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadCbxYear() {
        try {
            cbxData = new HashMap();
            BrandDAO brandDAO = new BrandDAO();
            cbxData = brandDAO.getCbxBrandData();
            vctCbxData = new Vector();
            for (BrandDTO brandDTO : brandData) {
                vctCbxData.add(brandDTO.getBrandName());
            }
            DefaultComboBoxModel model = new DefaultComboBoxModel(vctCbxData);
            cbxBrandName.setModel(model);
            cbxBrandName.updateUI();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MainView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(MainView.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
}
